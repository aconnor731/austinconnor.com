{"ast":null,"code":"var _jsxFileName = \"/home/aconnor/repos/fun/austinconnor.com/src/Resume.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, createStyles, styled } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    backgroundColor: theme.palette.primary.dark,\n    width: \"100%\",\n    height: \"80vh\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nconst StyledStepper = styled(Stepper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.primary.dark\n}));\nconst StyledTypography = styled(Typography)(({\n  theme\n}) => ({\n  margin: 0,\n  backgroundColor: theme.palette.primary.dark\n}));\n\nfunction getSteps() {\n  return [{\n    businessName: \"Allo Communications, Jan. 2020 - Present\",\n    jobTitle: \"Software Engineer\"\n  }, {\n    businessName: \"Assurity Life Insurance, Sep. 2019 - Dec. 2019\",\n    jobTitle: \"Software Development Specialist\"\n  }, {\n    businessName: \"TD Ameritrade, May 2019 - Aug. 2019\",\n    jobTitle: \"Software Engineering Intern\"\n  }, {\n    businessName: \"Firespring, Jan. 2019 - May 2019\",\n    jobTitle: \"Software Engineering Intern\"\n  }, {\n    businessName: \"PenLink, May 2018 - Aug. 2018\",\n    jobTitle: \"Software Engineering Intern\"\n  }, {\n    businessName: \"Nebraska Book Company, Jan. 2018 - May 2018\",\n    jobTitle: \"Software Engineering Intern\"\n  }];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `Built applications using TypeScript, React, GraphQL, Go, Python, dynamoDB, AWS Lambda, and many other AWS utilities.`;\n\n    case 1:\n      // return \"An ad group contains one or more ads which target a shared set of keywords.\";\n      return `Processed sales data using Python, SQL, C#, and Powershell.`;\n\n    case 2:\n      return `Transitioned legacy applications using React, GraphQL, Java-Spring, PCF, and agile methodologies.`;\n\n    case 3:\n      return `Maintained sites for St. Baldrick's cancer research using Ruby on Rails, React, AWS, PHP, and agile methodologies.`;\n\n    case 4:\n      return `Constructed in-house website using >NET Core, C#, React, agile methodologies, and Microsoft TCF.`;\n\n    case 5:\n      return `Built centralized inventory application using .NET, Azure, SQL, C#, and agile methodologies.`;\n\n    default:\n      return \"Unknown step\";\n  }\n}\n\nconst Resume = () => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((label, index) => {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            optional: /*#__PURE__*/_jsxDEV(Typography, {\n              children: label.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 36\n            }, this),\n            children: label.businessName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: getStepContent(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.actionsContainer,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disabled: activeStep === 0,\n                  onClick: handleBack,\n                  className: classes.button,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleNext,\n                  className: classes.button,\n                  children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, label.businessName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n      square: true,\n      elevation: 0,\n      className: classes.resetContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        className: classes.button,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resume, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Resume;\nexport default Resume;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume\");","map":{"version":3,"sources":["/home/aconnor/repos/fun/austinconnor.com/src/Resume.tsx"],"names":["React","makeStyles","createStyles","styled","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","useStyles","theme","root","backgroundColor","palette","primary","dark","width","height","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","StyledStepper","StyledTypography","margin","getSteps","businessName","jobTitle","getStepContent","step","Resume","classes","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  styled,\n} from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.primary.dark,\n      width: \"100%\",\n      height: \"80vh\",\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst StyledStepper = styled(Stepper)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n}));\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  margin: 0,\n  backgroundColor: theme.palette.primary.dark,\n}));\n\nfunction getSteps() {\n  return [\n    {\n      businessName: \"Allo Communications, Jan. 2020 - Present\",\n      jobTitle: \"Software Engineer\",\n    },\n    {\n      businessName: \"Assurity Life Insurance, Sep. 2019 - Dec. 2019\",\n      jobTitle: \"Software Development Specialist\",\n    },\n    {\n      businessName: \"TD Ameritrade, May 2019 - Aug. 2019\",\n      jobTitle: \"Software Engineering Intern\",\n    },\n    {\n      businessName: \"Firespring, Jan. 2019 - May 2019\",\n      jobTitle: \"Software Engineering Intern\",\n    },\n    {\n      businessName: \"PenLink, May 2018 - Aug. 2018\",\n      jobTitle: \"Software Engineering Intern\",\n    },\n    {\n      businessName: \"Nebraska Book Company, Jan. 2018 - May 2018\",\n      jobTitle: \"Software Engineering Intern\",\n    },\n  ];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return `Built applications using TypeScript, React, GraphQL, Go, Python, dynamoDB, AWS Lambda, and many other AWS utilities.`;\n    case 1:\n      // return \"An ad group contains one or more ads which target a shared set of keywords.\";\n      return `Processed sales data using Python, SQL, C#, and Powershell.`;\n    case 2:\n      return `Transitioned legacy applications using React, GraphQL, Java-Spring, PCF, and agile methodologies.`;\n    case 3:\n      return `Maintained sites for St. Baldrick's cancer research using Ruby on Rails, React, AWS, PHP, and agile methodologies.`;\n    case 4:\n      return `Constructed in-house website using >NET Core, C#, React, agile methodologies, and Microsoft TCF.`;\n    case 5:\n      return `Built centralized inventory application using .NET, Azure, SQL, C#, and agile methodologies.`;\n    default:\n      return \"Unknown step\";\n  }\n}\n\nconst Resume = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">\n        <u>Experience</u>\n      </Typography>\n      <StyledStepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => {\n          return (\n            <Step key={label.businessName}>\n              <StepLabel optional={<Typography>{label.jobTitle}</Typography>}>\n                {label.businessName}\n              </StepLabel>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          );\n        })}\n      </StyledStepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default Resume;\n"]},"metadata":{},"sourceType":"module"}